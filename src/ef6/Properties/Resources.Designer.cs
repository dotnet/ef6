//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System.Data.Entity.Tools.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("System.Data.Entity.Tools.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The assembly to use. ähnelt.
        /// </summary>
        internal static string AssemblyDescription {
            get {
                return ResourceManager.GetString("AssemblyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You can use the Add-Migration command to write the pending model changes to a code-based migration. ähnelt.
        /// </summary>
        internal static string AutomaticMigrationDisabledInfo {
            get {
                return ResourceManager.GetString("AutomaticMigrationDisabledInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the configuration file to use for named connection strings. ähnelt.
        /// </summary>
        internal static string ConfigDescription {
            get {
                return ResourceManager.GetString("ConfigDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the lease timeout for remote connections. ähnelt.
        /// </summary>
        internal static string ConnectionLeaseTime {
            get {
                return ResourceManager.GetString("ConnectionLeaseTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the provider invariant name of the connection string. ähnelt.
        /// </summary>
        internal static string ConnectionProviderDescription {
            get {
                return ResourceManager.GetString("ConnectionProviderDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the connection string to use. If omitted, the context&apos;s default connection will be used. ähnelt.
        /// </summary>
        internal static string ConnectionStringDescription {
            get {
                return ResourceManager.GetString("ConnectionStringDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the name of a connection string to use from the application&apos;s configuration file. ähnelt.
        /// </summary>
        internal static string ConnectionStringNameDescription {
            get {
                return ResourceManager.GetString("ConnectionStringNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the name of the assembly which contains the DbContext class to use. If omitted, the context is assumed to be in the same assembly used for migrations. ähnelt.
        /// </summary>
        internal static string ContextAssemblyDescription {
            get {
                return ResourceManager.GetString("ContextAssemblyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the context to use. If omitted, migrations will attempt to locate a single context type in the target project. ähnelt.
        /// </summary>
        internal static string ContextDescription {
            get {
                return ResourceManager.GetString("ContextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commands to manage the database. ähnelt.
        /// </summary>
        internal static string DatabaseDescription {
            get {
                return ResourceManager.GetString("DatabaseDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Applies any pending migrations to the database. ähnelt.
        /// </summary>
        internal static string DatabaseUpdateDescription {
            get {
                return ResourceManager.GetString("DatabaseUpdateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies that data loss is acceptable during automatic migration of the database. ähnelt.
        /// </summary>
        internal static string DatabaseUpdateForceDescription {
            get {
                return ResourceManager.GetString("DatabaseUpdateForceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generate a SQL script rather than executing the pending changes directly. ähnelt.
        /// </summary>
        internal static string DatabaseUpdateScriptDescription {
            get {
                return ResourceManager.GetString("DatabaseUpdateScriptDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only valid with --script. Specifies the name of a particular migration to use as the update&apos;s starting point. If omitted, the last applied migration in the database will be used. ähnelt.
        /// </summary>
        internal static string DatabaseUpdateSourceDescription {
            get {
                return ResourceManager.GetString("DatabaseUpdateSourceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the name of a particular migration to update the database to. If omitted, the current model will be used. ähnelt.
        /// </summary>
        internal static string DatabaseUpdateTargetDescription {
            get {
                return ResourceManager.GetString("DatabaseUpdateTargetDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The data directory. ähnelt.
        /// </summary>
        internal static string DataDirDescription {
            get {
                return ResourceManager.GetString("DataDirDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A previous migration called &apos;{0}&apos; was already applied to the target database. If you meant to re-scaffold &apos;{0}&apos;, revert it by running &apos;Update-Database -TargetMigration {1}&apos;, then delete &apos;{2}&apos; and run &apos;Add-Migration {0}&apos; again. ähnelt.
        /// </summary>
        internal static string DidYouMeanToRescaffold {
            get {
                return ResourceManager.GetString("DidYouMeanToRescaffold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Entity Framework Command-line Tools ähnelt.
        /// </summary>
        internal static string EF6FullName {
            get {
                return ResourceManager.GetString("EF6FullName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking if the context targets an existing database... ähnelt.
        /// </summary>
        internal static string EnableMigrations_BeginInitialScaffold {
            get {
                return ResourceManager.GetString("EnableMigrations_BeginInitialScaffold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detected database created with a database initializer. Scaffolded migration &apos;{0}&apos; corresponding to existing database. To use an automatic migration instead, delete the Migrations folder and re-run Enable-Migrations specifying the -EnableAutomaticMigrations parameter. ähnelt.
        /// </summary>
        internal static string EnableMigrations_InitialScaffold {
            get {
                return ResourceManager.GetString("EnableMigrations_InitialScaffold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code First Migrations enabled for project {0}. ähnelt.
        /// </summary>
        internal static string EnableMigrations_Success {
            get {
                return ResourceManager.GetString("EnableMigrations_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your target project &apos;{0}&apos; doesn&apos;t reference EntityFramework. This package is required for the Entity Framework Core Tools to work. Ensure your target project is correct, install the package, and try again. ähnelt.
        /// </summary>
        internal static string EntityFrameworkNotFound {
            get {
                return ResourceManager.GetString("EntityFrameworkNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Retrieving migrations that have been applied to the target database. ähnelt.
        /// </summary>
        internal static string GetMigrationsCommand_Intro {
            get {
                return ResourceManager.GetString("GetMigrationsCommand_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No migrations have been applied to the target database. ähnelt.
        /// </summary>
        internal static string GetMigrationsCommand_NoHistory {
            get {
                return ResourceManager.GetString("GetMigrationsCommand_NoHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scaffolds an empty migration ignoring any pending changes detected in the current model. This can be used to create an initial, empty migration to enable Migrations for an existing database. N.B. Doing this assumes that the target database schema is compatible with the current model. ähnelt.
        /// </summary>
        internal static string IgnoreChangesDescription {
            get {
                return ResourceManager.GetString("IgnoreChangesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show JSON output. ähnelt.
        /// </summary>
        internal static string JsonDescription {
            get {
                return ResourceManager.GetString("JsonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The language. Defaults to &apos;C#&apos;. ähnelt.
        /// </summary>
        internal static string LanguageDescription {
            get {
                return ResourceManager.GetString("LanguageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the name of the custom script. ähnelt.
        /// </summary>
        internal static string MigrationNameDescription {
            get {
                return ResourceManager.GetString("MigrationNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scaffolds a migration script for any pending model changes. ähnelt.
        /// </summary>
        internal static string MigrationsAddDescription {
            get {
                return ResourceManager.GetString("MigrationsAddDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies that the migration user code be overwritten when re-scaffolding an existing migration. ähnelt.
        /// </summary>
        internal static string MigrationsAddForceDescription {
            get {
                return ResourceManager.GetString("MigrationsAddForceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Migrations have already been enabled in project &apos;{0}&apos;. To overwrite the existing migrations configuration, use the -Force parameter. ähnelt.
        /// </summary>
        internal static string MigrationsAlreadyEnabled {
            get {
                return ResourceManager.GetString("MigrationsAlreadyEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the migrations configuration to use. If omitted, migrations will attempt to locate a single migrations configuration type in the target project. ähnelt.
        /// </summary>
        internal static string MigrationsConfigDescription {
            get {
                return ResourceManager.GetString("MigrationsConfigDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commands to manage migrations. ähnelt.
        /// </summary>
        internal static string MigrationsDescription {
            get {
                return ResourceManager.GetString("MigrationsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the name of the directory that will contain migrations code files. If omitted, the directory will be named &quot;Migrations&quot;. ähnelt.
        /// </summary>
        internal static string MigrationsDirDescription {
            get {
                return ResourceManager.GetString("MigrationsDirDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The &apos;MigrationsDirectory&apos; parameter was set to the absolute path &apos;{0}&apos;. The migrations directory must be set to a relative path for a sub-directory under the Visual Studio project root. ähnelt.
        /// </summary>
        internal static string MigrationsDirectoryParamIsRooted {
            get {
                return ResourceManager.GetString("MigrationsDirectoryParamIsRooted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies whether automatic migrations will be enabled in the scaffolded migrations configuration. If omitted, automatic migrations will be disabled. ähnelt.
        /// </summary>
        internal static string MigrationsEnableAutoDescription {
            get {
                return ResourceManager.GetString("MigrationsEnableAutoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enables Code First Migrations in a project. ähnelt.
        /// </summary>
        internal static string MigrationsEnableDescription {
            get {
                return ResourceManager.GetString("MigrationsEnableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies that the migrations configuration be overwritten when running more than once for a given project. ähnelt.
        /// </summary>
        internal static string MigrationsEnableForceDescription {
            get {
                return ResourceManager.GetString("MigrationsEnableForceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays the migrations that have been applied to the target database. ähnelt.
        /// </summary>
        internal static string MigrationsListDescription {
            get {
                return ResourceManager.GetString("MigrationsListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing required argument &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string MissingArgument {
            get {
                return ResourceManager.GetString("MissingArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing required option &apos;--{0}&apos;. ähnelt.
        /// </summary>
        internal static string MissingOption {
            get {
                return ResourceManager.GetString("MissingOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify either option &apos;--{0}&apos; or &apos;--{2}&apos;, but not both. ähnelt.
        /// </summary>
        internal static string MutuallyExclusiveOptions {
            get {
                return ResourceManager.GetString("MutuallyExclusiveOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Don&apos;t colorize output. ähnelt.
        /// </summary>
        internal static string NoColorDescription {
            get {
                return ResourceManager.GetString("NoColorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prefix output with level. ähnelt.
        /// </summary>
        internal static string PrefixDescription {
            get {
                return ResourceManager.GetString("PrefixDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The project directory. Defaults to the current directory. ähnelt.
        /// </summary>
        internal static string ProjectDirDescription {
            get {
                return ResourceManager.GetString("ProjectDirDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re-scaffolding migration &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string RescaffoldingMigration {
            get {
                return ResourceManager.GetString("RescaffoldingMigration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only the Designer Code for migration &apos;{0}&apos; was re-scaffolded. To re-scaffold the entire migration, use the -Force parameter. ähnelt.
        /// </summary>
        internal static string RescaffoldNoForce {
            get {
                return ResourceManager.GetString("RescaffoldNoForce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The root namespace. Defaults to the target assembly name. ähnelt.
        /// </summary>
        internal static string RootNamespaceDescription {
            get {
                return ResourceManager.GetString("RootNamespaceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scaffolding migration &apos;{0}&apos;. ähnelt.
        /// </summary>
        internal static string ScaffoldingMigration {
            get {
                return ResourceManager.GetString("ScaffoldingMigration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Designer Code for this migration file includes a snapshot of your current Code First model. This snapshot is used to calculate the changes to your model when you scaffold the next migration. If you make additional changes to your model that you want to include in this migration, then you can re-scaffold it by running &apos;Add-Migration {0}&apos; again. ähnelt.
        /// </summary>
        internal static string SnapshotBehindWarning {
            get {
                return ResourceManager.GetString("SnapshotBehindWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify the &apos;-Verbose&apos; flag to view the SQL statements being applied to the target database. ähnelt.
        /// </summary>
        internal static string UpdateDatabaseCommand_VerboseInstructions {
            get {
                return ResourceManager.GetString("UpdateDatabaseCommand_VerboseInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show verbose output. ähnelt.
        /// </summary>
        internal static string VerboseDescription {
            get {
                return ResourceManager.GetString("VerboseDescription", resourceCulture);
            }
        }
    }
}
